from src.Field import Field
from src.Solver import Solver


class TestSolver:
    def test_simple5x5(self) -> None:
        matrix_1 = Field([[2, 3, 3, 4, 1], [5, 2, 4, 4, 3], [1, 2, 2, 5, 1], [3, 4, 2, 2, 5], [4, 3, 5, 3, 3]])
        solver = Solver(matrix_1)

        result = [x.get_int_matrix() for x in solver.solve()]

        assert result == [[[0, 1, 0, 0, 0], [0, 0, 0, 1, 0], [0, 1, 0, 0, 1], [0, 0, 1, 0, 0], [0, 1, 0, 0, 1]]]

        matrix_2 = Field([[1, 1, 2, 5, 1], [2, 3, 5, 4, 1], [1, 4, 1, 2, 1], [5, 3, 1, 3, 4], [2, 5, 2, 1, 2]])
        solver = Solver(matrix_2)

        result = [x.get_int_matrix() for x in solver.solve()]

        assert result == [[[1, 0, 1, 0, 1], [0, 0, 0, 0, 0], [0, 0, 1, 0, 1], [0, 1, 0, 0, 0], [1, 0, 0, 0, 1]]]

        matrix_3 = Field([[4, 5, 5, 1, 3], [3, 1, 4, 3, 1], [3, 2, 4, 5, 4], [2, 3, 5, 3, 2], [5, 4, 3, 2, 3]])
        solver = Solver(matrix_3)

        result = [x.get_int_matrix() for x in solver.solve()]

        assert result == [[[0, 0, 1, 0, 0], [1, 0, 0, 0, 1], [0, 0, 1, 0, 0], [1, 0, 0, 1, 0], [0, 0, 0, 0, 1]]]

    def test_medium10x10(self) -> None:
        matrix_1 = Field(
            [
                [9, 6, 3, 3, 2, 7, 8, 3, 10, 7],
                [5, 6, 8, 2, 6, 9, 1, 4, 6, 10],
                [4, 7, 6, 4, 3, 1, 4, 10, 9, 4],
                [4, 2, 10, 8, 5, 10, 3, 5, 4, 1],
                [7, 7, 9, 3, 10, 2, 1, 8, 3, 3],
                [3, 9, 10, 7, 8, 4, 5, 1, 8, 2],
                [1, 10, 4, 10, 8, 3, 9, 3, 7, 6],
                [3, 4, 3, 1, 3, 8, 3, 6, 5, 3],
                [10, 8, 2, 3, 4, 3, 7, 3, 8, 9],
                [3, 10, 5, 9, 1, 6, 7, 7, 2, 3],
            ]
        )

        solver = Solver(matrix_1)

        result = [x.get_int_matrix() for x in solver.solve()]

        assert result == [
            [
                [0, 0, 1, 0, 0, 0, 0, 1, 0, 1],
                [0, 1, 0, 0, 1, 0, 0, 0, 0, 0],
                [0, 0, 0, 1, 0, 0, 1, 0, 0, 1],
                [1, 0, 1, 0, 0, 0, 0, 1, 0, 0],
                [0, 1, 0, 1, 0, 0, 1, 0, 0, 1],
                [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
                [0, 1, 0, 0, 0, 0, 0, 1, 0, 0],
                [1, 0, 0, 0, 1, 0, 1, 0, 0, 1],
                [0, 0, 0, 1, 0, 1, 0, 0, 1, 0],
                [1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
            ]
        ]

        matrix_2 = Field(
            [
                [10, 2, 2, 4, 3, 6, 5, 8, 6, 6],
                [8, 10, 9, 5, 6, 3, 1, 6, 4, 2],
                [5, 2, 1, 2, 8, 6, 10, 2, 7, 6],
                [7, 1, 7, 8, 3, 2, 3, 9, 7, 10],
                [1, 2, 4, 2, 7, 2, 9, 2, 8, 5],
                [6, 8, 7, 10, 6, 5, 2, 4, 7, 1],
                [9, 4, 3, 4, 10, 6, 4, 5, 2, 4],
                [4, 3, 4, 9, 4, 8, 4, 6, 10, 4],
                [3, 2, 8, 4, 5, 6, 7, 2, 1, 6],
                [6, 5, 10, 2, 2, 7, 6, 1, 2, 8],
            ]
        )

        solver = Solver(matrix_2)

        result = [x.get_int_matrix() for x in solver.solve()]

        assert result == [
            [
                [0, 1, 0, 1, 0, 1, 0, 0, 0, 1],
                [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
                [0, 1, 0, 1, 0, 1, 0, 0, 0, 1],
                [0, 0, 1, 0, 1, 0, 0, 0, 1, 0],
                [0, 1, 0, 0, 0, 1, 0, 1, 0, 0],
                [0, 0, 0, 0, 1, 0, 0, 0, 1, 0],
                [0, 1, 0, 1, 0, 0, 1, 0, 0, 0],
                [1, 0, 1, 0, 1, 0, 0, 0, 0, 1],
                [0, 0, 0, 0, 0, 1, 0, 1, 0, 0],
                [1, 0, 0, 1, 0, 0, 0, 0, 1, 0],
            ],
            [
                [0, 1, 0, 1, 0, 1, 0, 0, 0, 1],
                [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
                [0, 1, 0, 1, 0, 1, 0, 0, 0, 1],
                [0, 0, 1, 0, 1, 0, 0, 0, 1, 0],
                [0, 1, 0, 0, 0, 1, 0, 1, 0, 0],
                [0, 0, 0, 0, 1, 0, 0, 0, 1, 0],
                [0, 1, 0, 1, 0, 0, 1, 0, 0, 0],
                [1, 0, 1, 0, 1, 0, 0, 0, 0, 1],
                [0, 0, 0, 0, 0, 1, 0, 1, 0, 0],
                [1, 0, 0, 1, 0, 0, 0, 0, 1, 0],
            ],
        ]

        matrix_3 = Field(
            [
                [7, 6, 8, 6, 5, 10, 6, 3, 6, 4],
                [5, 6, 10, 2, 5, 7, 8, 4, 1, 10],
                [10, 4, 6, 4, 1, 4, 5, 4, 8, 2],
                [4, 7, 5, 10, 4, 8, 4, 1, 4, 6],
                [1, 5, 9, 5, 7, 6, 10, 5, 4, 8],
                [6, 10, 2, 5, 6, 4, 1, 8, 7, 10],
                [9, 4, 10, 8, 2, 3, 2, 5, 10, 7],
                [6, 1, 4, 9, 8, 4, 3, 4, 5, 10],
                [8, 4, 7, 4, 4, 5, 2, 10, 2, 1],
                [2, 8, 2, 4, 10, 5, 7, 10, 9, 5],
            ]
        )

        solver = Solver(matrix_3)

        result = [x.get_int_matrix() for x in solver.solve()]

        assert result == [
            [
                [0, 1, 0, 1, 0, 0, 1, 0, 0, 0],
                [0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
                [0, 1, 0, 1, 0, 0, 0, 1, 0, 0],
                [1, 0, 0, 0, 1, 0, 0, 0, 1, 0],
                [0, 0, 0, 1, 0, 0, 0, 1, 0, 0],
                [1, 0, 0, 0, 0, 1, 0, 0, 0, 1],
                [0, 0, 1, 0, 0, 0, 1, 0, 0, 0],
                [0, 0, 0, 0, 0, 1, 0, 1, 0, 0],
                [0, 1, 0, 1, 0, 0, 0, 0, 1, 0],
                [0, 0, 1, 0, 0, 1, 0, 1, 0, 0],
            ]
        ]

    def test_hard15x15(self) -> None:
        matrix_1 = Field(
            [
                [7, 5, 9, 14, 11, 3, 6, 2, 5, 8, 12, 5, 10, 6, 5],
                [11, 2, 13, 12, 1, 11, 5, 12, 7, 9, 10, 14, 12, 15, 9],
                [10, 11, 1, 3, 11, 15, 11, 8, 5, 13, 11, 1, 7, 11, 6],
                [1, 1, 2, 9, 10, 9, 4, 11, 7, 12, 15, 5, 9, 3, 7],
                [2, 14, 15, 4, 15, 10, 9, 7, 3, 15, 13, 11, 12, 5, 15],
                [14, 9, 15, 5, 2, 5, 9, 6, 1, 4, 1, 9, 3, 5, 11],
                [2, 12, 2, 15, 2, 9, 3, 2, 8, 2, 11, 6, 2, 4, 2],
                [6, 10, 1, 11, 4, 13, 2, 14, 13, 9, 3, 10, 5, 10, 8],
                [13, 3, 8, 13, 5, 14, 7, 15, 6, 13, 4, 7, 11, 10, 13],
                [15, 13, 15, 1, 3, 2, 8, 15, 11, 6, 15, 9, 15, 12, 4],
                [5, 7, 11, 1, 13, 1, 7, 4, 1, 15, 14, 7, 9, 1, 1],
                [10, 8, 10, 13, 9, 1, 12, 7, 15, 7, 9, 3, 14, 2, 14],
                [8, 7, 14, 9, 15, 4, 10, 3, 4, 5, 9, 4, 1, 9, 12],
                [12, 4, 6, 2, 6, 7, 6, 9, 1, 6, 5, 12, 15, 13, 6],
                [3, 14, 12, 5, 7, 5, 6, 1, 9, 11, 1, 10, 13, 14, 2],
            ]
        )
        solver = Solver(matrix_1)

        result = [x.get_int_matrix() for x in solver.solve()]

        assert result == [
            [
                [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1],
                [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0],
                [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0],
                [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0],
                [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
                [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0],
                [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],
                [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0],
                [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0],
                [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0],
                [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],
                [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0],
                [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0],
                [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1],
                [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0],
            ]
        ]
